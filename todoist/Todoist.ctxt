#BlueJ class context
comment0.target=Todoist
comment0.text=\r\n\ Clase\ que\ permite\ almacenar\ las\ tareas\ pendientes\ que\ tenemos\ por\ hacer.\r\n
comment1.params=
comment1.target=Todoist()
comment1.text=\r\n\ Constructorde\ la\ clase\ todoist.\ Crea\ un\ gestor\ con\ las\ 3\ tareas\ vacias.\r\n
comment10.params=
comment10.target=void\ mostrarTareasEnPosicionImpar()
comment10.text=\r\n\ Muestra\ solo\ las\ tareas\ en\ posiciones\ impares\ sin\ numero\ delante\ ni\ nada,\r\n\ solo\ la\ tarea\r\n
comment11.params=
comment11.target=void\ mostrarTareasEnPosicionImpar2()
comment11.text=\r\n\ Muestra\ solo\ las\ tareas\ en\ posiciones\ impares\ sin\ numero\ delante\ ni\ nada,\r\n\ solo\ la\ tarea\r\n
comment12.params=textoABuscar
comment12.target=void\ mostrarCoincidentes(java.lang.String)
comment12.text=\r\n\ Muestra\ por\ pantalla\ todas\ las\ tareas\ que\ contienen\ el\ texto\ indicado\r\n\ como\ par\u00E1metro,\ una\ en\ cada\ linea.\ \r\n\ Y\ ademas\ muestra\ un\ mensaje\ al\ final\ indicando\r\n\ el\ numero\ de\ coincidencias\ encontradas.\r\n\ Este\ metodo\ es\ insensible\ a\ mayusculas\ o\ minusculas.\r\n\ Si\ no\ hay\ ninguna\ que\ contenga\ el\ texto\r\n\ buscado\ informa\ de\ la\ situacion\ \r\n
comment13.params=textoABuscar
comment13.target=void\ mostrarCoincidentes2(java.lang.String)
comment13.text=\r\n\ Muestra\ por\ pantalla\ todas\ las\ tareas\ que\ contienen\ el\ texto\ indicado\r\n\ como\ par\u00E1metro,\ una\ en\ cada\ linea,\ y\ ademas\ muestra\ un\ mensaje\ al\ final\ indicando\r\n\ el\ numero\ de\ coincidencias\ encontradas.\ Si\ no\ hay\ ninguna\ que\ contenga\ el\ texto\r\n\ buscado\ informa\ de\ la\ situacion.\ Este\ metodo\ es\ insensible\ a\ mayusculas\ o\ minusculas\r\n
comment14.params=textoABuscar
comment14.target=void\ mostrarPrimeraCoincidente(java.lang.String)
comment14.text=\r\n\ Muestra\ por\ pantalla\ la\ primera\ tarea\ que\ contenga\ el\ texto\ indicado\ como\ \r\n\ parametro.\ En\ caso\ de\ que\ no\ haya\ ninguna\ coincidencia\ no\ muestra\ nada\r\n
comment15.params=textoABuscar
comment15.target=void\ mostrarPrimeraCoincidente2(java.lang.String)
comment15.text=\r\n\ la\ variable\ es\ false,\ cuando\ se\ cumple\ es\ true,\ \r\n\ con\ lo\ cual\ cuando\ es\ \!yaSeHa...,\ es\ falso\ \r\n\ \#\#\#LO\ MISMO\ NO\ LO\ TENGO\ BIEN\ PLANTEADA\ ESTA\ EXPLICACION\r\n
comment16.params=
comment16.target=void\ mostrarTareas2()
comment16.text=\r\n\ Muestra\ por\ pantalla\ todas\ las\ tareas\ existentes,\ una\ por\ l\u00EDnea,\r\n\ usando\ un\ bucle\ while\r\n
comment17.params=
comment17.target=void\ mostrarTareasNumeradas2()
comment17.text=\r\n\ Muestra\ las\ tareas\ numeradas\ usando\ un\ bucle\ while\ empezando\ en\ 1\r\n
comment18.params=numeroDeTareasAMostrar
comment18.target=void\ mostrarNPrimeras(int)
comment18.text=\r\n\ Muestra\ por\ pantalla\ las\ primeras\ n\ tareas\ (siendo\ n\ un\ parametro).\ En\r\n\ caso\ de\ que\ no\ haya\ suficientes\ tareas\ muestra\ solo\ las\ que\ haya.\r\n\ EL\ BUCLE\ PARA\ \r\n\ CUANDO\ LA\ POSICION\ DE\ LA\ ULTIMA\ TAREA\ COINCIDE\ CON\ EL\ PARAMETRO\ INTRODUCIDO\r\n\ Y\ CUANDO\ LA\ POSICION\ DE\ LA\ ULTIMA\ TAREA\ COINCIDE\ CON\ EL\ TOTAL\ DE\ TAREAS\r\n
comment19.params=textoABuscar
comment19.target=boolean\ hayTareaCoincidente(java.lang.String)
comment19.text=\r\n\ Devuelve\ true\ si\ hay\ al\ menos\ una\ tarea\ que\ contenga\ el\ texto\ indicado\r\n\ como\ par\u00E1metro\ y\ false\ en\ caso\ contrario.\ El\ metodo\ se\ debe\ ejecutar\ de\ la\r\n\ forma\ mas\ rapida\ posible\r\n
comment2.params=nombreTarea
comment2.target=void\ addTarea(java.lang.String)
comment2.text=\r\n\ Inserta\ la\ tarea\ especifica\ en\ la\ posicion\ indicada\r\n
comment20.params=textoABuscar
comment20.target=boolean\ hayTareaCoincidenteEficiente(java.lang.String)
comment20.text=\r\n\ Devuelve\ true\ si\ hay\ al\ menos\ una\ tarea\ que\ contenga\ el\ texto\ indicado\r\n\ como\ par\u00E1metro\ y\ false\ en\ caso\ contrario.\ El\ metodo\ se\ debe\ ejecutar\ de\ la\r\n\ forma\ mas\ rapida\ posible\r\n
comment21.params=textoABuscar
comment21.target=void\ eliminaPrimeraTareaCoincidente(java.lang.String)
comment21.text=\r\n\ Elimina\ la\ primera\ tarea\ que\ contiene\ el\ texto\ indicado\ por\ par\u00E1metro\r\n
comment22.params=textoABuscar
comment22.target=void\ eliminaTodasTareasCoincidentes(java.lang.String)
comment22.text=\r\n\ Elimina\ todas\ las\ tareas\ que\ contienen\ el\ texto\ a\ buscar\r\n
comment23.params=indiceTarea
comment23.target=void\ marcarComoCompletada(int)
comment23.text=\r\n\ Marca\ como\ completada\ la\ tarea\ indicada\ como\ parametro.\ Por\ ejemplo,\r\n\ si\ el\ par\u00E1metro\ es\ 0\ marca\ como\ completada\ la\ primera\ tarea,\ si\ es\ 1\ la\r\n\ segunda,\ etc.\r\n
comment3.params=
comment3.target=void\ mostrarTareas()
comment3.text=\r\n\ Mostrar\ por\ pantalla\ las\ tareas\ existentes\r\n
comment4.params=
comment4.target=int\ getNumeroDeTareas()
comment4.text=\r\n\ Devuelve\ el\ numero\ de\ tareas\r\n
comment5.params=
comment5.target=void\ mostrarNumeroDeTareasPendientes()
comment5.text=\r\n\ Imprime\ por\ pantalla\ el\ numero\ de\ tareas\ pendientes\r\n
comment6.params=posicionTarea
comment6.target=boolean\ eliminarTarea(int)
comment6.text=\ \r\n\ Elimina\ la\ tarea\ que\ ocupa\ la\ posicion\ indicada\ como\r\n\ parametro\ (empezando\ en\ 0).\ Devuelce\ true\ si\ elimina\ una\ \r\n\ tarea,\ false\ en\ caso\ contrario\r\n
comment7.params=indice
comment7.target=boolean\ indiceValido(int)
comment7.text=\r\n\ Metodo\ que\ comprueba\ si\ una\ posicion\ es\ valida\ y\ devuelve\ true\r\n\ en\ caso\ afirmativo\ o\ false\ en\ otro\ caso.\r\n
comment8.params=
comment8.target=boolean\ tareasPendientes()
comment8.text=\r\n\ Metodo\ que\ devuelve\ true\ en\ caso\ de\ que\ haya\ tareas\ por\ hacer,\ false\r\n\ en\ otro\ caso\r\n
comment9.params=
comment9.target=void\ mostrarTareasNumeradas()
comment9.text=\ \r\n\ Metodo\ que\ imprime\ todas\ las\ tareas\ existentes,\ una\ por\ linea.\r\n\ El\ metodo\ imprime\ el\ numero\ de\ posicion\ de\ la\ tarea\ antes\ del\r\n\ nombre\ de\ la\ tarea.\ Si\ la\ tarea\ esta\ completada\ se\ muestra\ un\r\n\ "[X]"\ antes\ de\ la\ tarea\ y\ si\ no\ esta\ completada\ se\ muestra\ un\r\n\ "[\ ]".\r\n
numComments=24
